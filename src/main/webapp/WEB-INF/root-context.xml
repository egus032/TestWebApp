<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context 
                http://www.springframework.org/schema/context/spring-context-4.3.xsd
                http://www.springframework.org/schema/data/jpa
                http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                http://www.springframework.org/schema/tx
                http://www.springframework.org/schema/tx/spring-tx.xsd
                http://www.springframework.org/schema/task
                http://www.springframework.org/schema/task/spring-task-3.2.xsd
                ">
                
                
                
    <context:component-scan base-package="com.mycompany.testwebapp"/>
    
    <!--это источник данных-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/testwebapp?useUnicode=true&amp;useJDBCCompliantTimezoneS‌​hift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC"/>
        <property name="username" value="root" />
        <property name="password" value="qwerty"/>
        <property name="initialSize" value="2" />
        <property name="maxActive" value="5" />
    </bean>
    
    
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!--диспетчер транзакций, меняется класс и ссылка на свойства  -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf"/>
    </bean>
      
    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- Добавляем новое свойство поставщика jpaAdaptera и добавляем jpaProperties -->
        <property name="jpaVendorAdapter"> 
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="packagesToScan" value="com.mycompany.testwebapp"/>
        <property name="jpaProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
            </value> 
        </property>
    </bean>
    
    <!--указываем репозиторий jpa и два доп.элемента -->
    <jpa:repositories base-package="com.mycompany.testwebapp"
                      entity-manager-factory-ref="emf"
                      transaction-manager-ref="transactionManager"/>
    
    <!--здесь создаем бин http инициатора, который отправляет либой бин Spring как службу-->
    <bean name="userExporter" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
        <!--имя бина и ссылка на сервис, т.е. на бин класса-->
        <property name="service" ref="userService"/>
        <!--имя бина и тип бина, представляющего собой интерфейс предыдущего бина выше -->
        <property name="serviceInterface" value="com.mycompany.testwebapp.dao.UserService"/> 
    </bean>
    
    <!--специальный бин, осуществляет -->
    <bean id="remoteUserService" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
        <property name="serviceUrl" value="http://localhost:8081/TestWebApp/remoting/UserService"/>
        <property name="serviceInterface" value="com.mycompany.testwebapp.dao.UserService"/>
    </bean>
    
       
    

</beans>
